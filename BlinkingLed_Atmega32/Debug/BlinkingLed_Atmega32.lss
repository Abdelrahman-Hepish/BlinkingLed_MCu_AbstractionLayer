
BlinkingLed_Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b44  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00001020  00000000  00000000  00000b98  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000c14  00000000  00000000  00001bb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "MCuAbstraction_layer.h"
#include "led.h"


void main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
   /* initialization */
    LED_Init(LED_1 , LED_ON) ;
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	61 e0       	ldi	r22, 0x01	; 1
  78:	0e 94 62 04 	call	0x8c4	; 0x8c4 <LED_Init>
    LED_Init(LED_2 , LED_ON) ;
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	61 e0       	ldi	r22, 0x01	; 1
  80:	0e 94 62 04 	call	0x8c4	; 0x8c4 <LED_Init>
    LED_Init(LED_3 , LED_ON) ;
  84:	82 e0       	ldi	r24, 0x02	; 2
  86:	61 e0       	ldi	r22, 0x01	; 1
  88:	0e 94 62 04 	call	0x8c4	; 0x8c4 <LED_Init>
    LED_Init(LED_4 , LED_ON) ;
  8c:	83 e0       	ldi	r24, 0x03	; 3
  8e:	61 e0       	ldi	r22, 0x01	; 1
  90:	0e 94 62 04 	call	0x8c4	; 0x8c4 <LED_Init>
	while(1)
	{
        LED_Update() ;
  94:	0e 94 75 04 	call	0x8ea	; 0x8ea <LED_Update>
  98:	fd cf       	rjmp	.-6      	; 0x94 <main+0x28>

0000009a <GPIO_InitPort>:
#define SetRegister(Register,_U8Value)          (Register = _U8Value )
#define ReadRegisterPinValue(Register,Pin)       ((Register & ((1<<Pin)))>>Pin)
#define ReadRegisterValue(Register)              (Register)

void GPIO_InitPort(tPORT port ,tPORT_DIRECTION direction ,tSTATE init_data)
{
  9a:	df 93       	push	r29
  9c:	cf 93       	push	r28
  9e:	00 d0       	rcall	.+0      	; 0xa0 <GPIO_InitPort+0x6>
  a0:	0f 92       	push	r0
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
  a6:	89 83       	std	Y+1, r24	; 0x01
  a8:	6a 83       	std	Y+2, r22	; 0x02
  aa:	4b 83       	std	Y+3, r20	; 0x03
    /* initialize port direction */
    GPIO_SetPortDirection(port,direction) ;
  ac:	89 81       	ldd	r24, Y+1	; 0x01
  ae:	6a 81       	ldd	r22, Y+2	; 0x02
  b0:	0e 94 ce 00 	call	0x19c	; 0x19c <GPIO_SetPortDirection>
    /* initialize port data     */
    GPIO_SetPortData(port,init_data) ;
  b4:	89 81       	ldd	r24, Y+1	; 0x01
  b6:	6b 81       	ldd	r22, Y+3	; 0x03
  b8:	0e 94 8d 00 	call	0x11a	; 0x11a <GPIO_SetPortData>
}
  bc:	0f 90       	pop	r0
  be:	0f 90       	pop	r0
  c0:	0f 90       	pop	r0
  c2:	cf 91       	pop	r28
  c4:	df 91       	pop	r29
  c6:	08 95       	ret

000000c8 <GPIO_InitPin>:
void GPIO_InitPin(tPORT port , tPIN pin ,tPIN_DIRECTION direction ,tSTATE init_state)
{
  c8:	df 93       	push	r29
  ca:	cf 93       	push	r28
  cc:	00 d0       	rcall	.+0      	; 0xce <GPIO_InitPin+0x6>
  ce:	00 d0       	rcall	.+0      	; 0xd0 <GPIO_InitPin+0x8>
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
  d4:	89 83       	std	Y+1, r24	; 0x01
  d6:	6a 83       	std	Y+2, r22	; 0x02
  d8:	4b 83       	std	Y+3, r20	; 0x03
  da:	2c 83       	std	Y+4, r18	; 0x04
   /* initialize pin direction */
   GPIO_SetPinDirection(port,pin ,direction) ;
  dc:	89 81       	ldd	r24, Y+1	; 0x01
  de:	6a 81       	ldd	r22, Y+2	; 0x02
  e0:	4b 81       	ldd	r20, Y+3	; 0x03
  e2:	0e 94 ca 01 	call	0x394	; 0x394 <GPIO_SetPinDirection>
   /* initialize pin state */
   GPIO_SetPinState(port ,pin ,init_state) ;
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	6a 81       	ldd	r22, Y+2	; 0x02
  ea:	4c 81       	ldd	r20, Y+4	; 0x04
  ec:	0e 94 0f 01 	call	0x21e	; 0x21e <GPIO_SetPinState>
}
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	cf 91       	pop	r28
  fa:	df 91       	pop	r29
  fc:	08 95       	ret

000000fe <GPIO_UpdatePort>:

void GPIO_UpdatePort(void)
{
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 /* should do no thing */
}
 106:	cf 91       	pop	r28
 108:	df 91       	pop	r29
 10a:	08 95       	ret

0000010c <GPIO_UpdatePin>:
void GPIO_UpdatePin(void)
{
 10c:	df 93       	push	r29
 10e:	cf 93       	push	r28
 110:	cd b7       	in	r28, 0x3d	; 61
 112:	de b7       	in	r29, 0x3e	; 62
/*  should do no thing */
}
 114:	cf 91       	pop	r28
 116:	df 91       	pop	r29
 118:	08 95       	ret

0000011a <GPIO_SetPortData>:
void GPIO_SetPortData(tPORT port,unsigned char data)
{
 11a:	df 93       	push	r29
 11c:	cf 93       	push	r28
 11e:	00 d0       	rcall	.+0      	; 0x120 <GPIO_SetPortData+0x6>
 120:	00 d0       	rcall	.+0      	; 0x122 <GPIO_SetPortData+0x8>
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	89 83       	std	Y+1, r24	; 0x01
 128:	6a 83       	std	Y+2, r22	; 0x02
    switch(port)
 12a:	89 81       	ldd	r24, Y+1	; 0x01
 12c:	28 2f       	mov	r18, r24
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	3c 83       	std	Y+4, r19	; 0x04
 132:	2b 83       	std	Y+3, r18	; 0x03
 134:	8b 81       	ldd	r24, Y+3	; 0x03
 136:	9c 81       	ldd	r25, Y+4	; 0x04
 138:	81 30       	cpi	r24, 0x01	; 1
 13a:	91 05       	cpc	r25, r1
 13c:	d1 f0       	breq	.+52     	; 0x172 <GPIO_SetPortData+0x58>
 13e:	2b 81       	ldd	r18, Y+3	; 0x03
 140:	3c 81       	ldd	r19, Y+4	; 0x04
 142:	22 30       	cpi	r18, 0x02	; 2
 144:	31 05       	cpc	r19, r1
 146:	2c f4       	brge	.+10     	; 0x152 <GPIO_SetPortData+0x38>
 148:	8b 81       	ldd	r24, Y+3	; 0x03
 14a:	9c 81       	ldd	r25, Y+4	; 0x04
 14c:	00 97       	sbiw	r24, 0x00	; 0
 14e:	61 f0       	breq	.+24     	; 0x168 <GPIO_SetPortData+0x4e>
 150:	1e c0       	rjmp	.+60     	; 0x18e <GPIO_SetPortData+0x74>
 152:	2b 81       	ldd	r18, Y+3	; 0x03
 154:	3c 81       	ldd	r19, Y+4	; 0x04
 156:	22 30       	cpi	r18, 0x02	; 2
 158:	31 05       	cpc	r19, r1
 15a:	81 f0       	breq	.+32     	; 0x17c <GPIO_SetPortData+0x62>
 15c:	8b 81       	ldd	r24, Y+3	; 0x03
 15e:	9c 81       	ldd	r25, Y+4	; 0x04
 160:	83 30       	cpi	r24, 0x03	; 3
 162:	91 05       	cpc	r25, r1
 164:	81 f0       	breq	.+32     	; 0x186 <GPIO_SetPortData+0x6c>
 166:	13 c0       	rjmp	.+38     	; 0x18e <GPIO_SetPortData+0x74>
    {
    case PORT_A :
        SetRegister(DATA_REGISTER_WRITE_PORTA,data) ;
 168:	eb e3       	ldi	r30, 0x3B	; 59
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	8a 81       	ldd	r24, Y+2	; 0x02
 16e:	80 83       	st	Z, r24
 170:	0e c0       	rjmp	.+28     	; 0x18e <GPIO_SetPortData+0x74>
    break;
    case PORT_B :
        SetRegister(DATA_REGISTER_WRITE_PORTB,data) ;
 172:	e8 e3       	ldi	r30, 0x38	; 56
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	8a 81       	ldd	r24, Y+2	; 0x02
 178:	80 83       	st	Z, r24
 17a:	09 c0       	rjmp	.+18     	; 0x18e <GPIO_SetPortData+0x74>
    break;
    case PORT_C :
        SetRegister(DATA_REGISTER_WRITE_PORTC,data) ;
 17c:	e5 e3       	ldi	r30, 0x35	; 53
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	8a 81       	ldd	r24, Y+2	; 0x02
 182:	80 83       	st	Z, r24
 184:	04 c0       	rjmp	.+8      	; 0x18e <GPIO_SetPortData+0x74>
    break;
    case PORT_D :
        SetRegister(DATA_REGISTER_WRITE_PORTD,data) ;
 186:	e2 e3       	ldi	r30, 0x32	; 50
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	80 83       	st	Z, r24
    break;
    default :
        /* should not be here */
    break ;
    }
}
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	cf 91       	pop	r28
 198:	df 91       	pop	r29
 19a:	08 95       	ret

0000019c <GPIO_SetPortDirection>:
void GPIO_SetPortDirection(tPORT port,U8 direction)
{
 19c:	df 93       	push	r29
 19e:	cf 93       	push	r28
 1a0:	00 d0       	rcall	.+0      	; 0x1a2 <GPIO_SetPortDirection+0x6>
 1a2:	00 d0       	rcall	.+0      	; 0x1a4 <GPIO_SetPortDirection+0x8>
 1a4:	cd b7       	in	r28, 0x3d	; 61
 1a6:	de b7       	in	r29, 0x3e	; 62
 1a8:	89 83       	std	Y+1, r24	; 0x01
 1aa:	6a 83       	std	Y+2, r22	; 0x02
     switch(port)
 1ac:	89 81       	ldd	r24, Y+1	; 0x01
 1ae:	28 2f       	mov	r18, r24
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	3c 83       	std	Y+4, r19	; 0x04
 1b4:	2b 83       	std	Y+3, r18	; 0x03
 1b6:	8b 81       	ldd	r24, Y+3	; 0x03
 1b8:	9c 81       	ldd	r25, Y+4	; 0x04
 1ba:	81 30       	cpi	r24, 0x01	; 1
 1bc:	91 05       	cpc	r25, r1
 1be:	d1 f0       	breq	.+52     	; 0x1f4 <GPIO_SetPortDirection+0x58>
 1c0:	2b 81       	ldd	r18, Y+3	; 0x03
 1c2:	3c 81       	ldd	r19, Y+4	; 0x04
 1c4:	22 30       	cpi	r18, 0x02	; 2
 1c6:	31 05       	cpc	r19, r1
 1c8:	2c f4       	brge	.+10     	; 0x1d4 <GPIO_SetPortDirection+0x38>
 1ca:	8b 81       	ldd	r24, Y+3	; 0x03
 1cc:	9c 81       	ldd	r25, Y+4	; 0x04
 1ce:	00 97       	sbiw	r24, 0x00	; 0
 1d0:	61 f0       	breq	.+24     	; 0x1ea <GPIO_SetPortDirection+0x4e>
 1d2:	1e c0       	rjmp	.+60     	; 0x210 <GPIO_SetPortDirection+0x74>
 1d4:	2b 81       	ldd	r18, Y+3	; 0x03
 1d6:	3c 81       	ldd	r19, Y+4	; 0x04
 1d8:	22 30       	cpi	r18, 0x02	; 2
 1da:	31 05       	cpc	r19, r1
 1dc:	81 f0       	breq	.+32     	; 0x1fe <GPIO_SetPortDirection+0x62>
 1de:	8b 81       	ldd	r24, Y+3	; 0x03
 1e0:	9c 81       	ldd	r25, Y+4	; 0x04
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	91 05       	cpc	r25, r1
 1e6:	81 f0       	breq	.+32     	; 0x208 <GPIO_SetPortDirection+0x6c>
 1e8:	13 c0       	rjmp	.+38     	; 0x210 <GPIO_SetPortDirection+0x74>
    {
    case PORT_A :
        SetRegister(DIRECTION_REGISTER_PORTA,direction) ;
 1ea:	ea e3       	ldi	r30, 0x3A	; 58
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	8a 81       	ldd	r24, Y+2	; 0x02
 1f0:	80 83       	st	Z, r24
 1f2:	0e c0       	rjmp	.+28     	; 0x210 <GPIO_SetPortDirection+0x74>
    break;
    case PORT_B :
        SetRegister(DIRECTION_REGISTER_PORTB,direction) ;
 1f4:	e7 e3       	ldi	r30, 0x37	; 55
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	8a 81       	ldd	r24, Y+2	; 0x02
 1fa:	80 83       	st	Z, r24
 1fc:	09 c0       	rjmp	.+18     	; 0x210 <GPIO_SetPortDirection+0x74>
    break;
    case PORT_C :
        SetRegister(DIRECTION_REGISTER_PORTD,direction) ;
 1fe:	e1 e3       	ldi	r30, 0x31	; 49
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	8a 81       	ldd	r24, Y+2	; 0x02
 204:	80 83       	st	Z, r24
 206:	04 c0       	rjmp	.+8      	; 0x210 <GPIO_SetPortDirection+0x74>
    break;
    case PORT_D :
        SetRegister(DIRECTION_REGISTER_PORTD,direction) ;
 208:	e1 e3       	ldi	r30, 0x31	; 49
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	8a 81       	ldd	r24, Y+2	; 0x02
 20e:	80 83       	st	Z, r24
    break;
    default :
        /* should not be here */
    break ;
    }
}
 210:	0f 90       	pop	r0
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	cf 91       	pop	r28
 21a:	df 91       	pop	r29
 21c:	08 95       	ret

0000021e <GPIO_SetPinState>:
void GPIO_SetPinState(tPORT port , tPIN pin , tSTATE state)
{
 21e:	df 93       	push	r29
 220:	cf 93       	push	r28
 222:	00 d0       	rcall	.+0      	; 0x224 <GPIO_SetPinState+0x6>
 224:	00 d0       	rcall	.+0      	; 0x226 <GPIO_SetPinState+0x8>
 226:	0f 92       	push	r0
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
 22c:	89 83       	std	Y+1, r24	; 0x01
 22e:	6a 83       	std	Y+2, r22	; 0x02
 230:	4b 83       	std	Y+3, r20	; 0x03
    switch(port)
 232:	89 81       	ldd	r24, Y+1	; 0x01
 234:	28 2f       	mov	r18, r24
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	3d 83       	std	Y+5, r19	; 0x05
 23a:	2c 83       	std	Y+4, r18	; 0x04
 23c:	6c 81       	ldd	r22, Y+4	; 0x04
 23e:	7d 81       	ldd	r23, Y+5	; 0x05
 240:	61 30       	cpi	r22, 0x01	; 1
 242:	71 05       	cpc	r23, r1
 244:	d1 f1       	breq	.+116    	; 0x2ba <GPIO_SetPinState+0x9c>
 246:	8c 81       	ldd	r24, Y+4	; 0x04
 248:	9d 81       	ldd	r25, Y+5	; 0x05
 24a:	82 30       	cpi	r24, 0x02	; 2
 24c:	91 05       	cpc	r25, r1
 24e:	34 f4       	brge	.+12     	; 0x25c <GPIO_SetPinState+0x3e>
 250:	2c 81       	ldd	r18, Y+4	; 0x04
 252:	3d 81       	ldd	r19, Y+5	; 0x05
 254:	21 15       	cp	r18, r1
 256:	31 05       	cpc	r19, r1
 258:	71 f0       	breq	.+28     	; 0x276 <GPIO_SetPinState+0x58>
 25a:	94 c0       	rjmp	.+296    	; 0x384 <GPIO_SetPinState+0x166>
 25c:	6c 81       	ldd	r22, Y+4	; 0x04
 25e:	7d 81       	ldd	r23, Y+5	; 0x05
 260:	62 30       	cpi	r22, 0x02	; 2
 262:	71 05       	cpc	r23, r1
 264:	09 f4       	brne	.+2      	; 0x268 <GPIO_SetPinState+0x4a>
 266:	4b c0       	rjmp	.+150    	; 0x2fe <GPIO_SetPinState+0xe0>
 268:	8c 81       	ldd	r24, Y+4	; 0x04
 26a:	9d 81       	ldd	r25, Y+5	; 0x05
 26c:	83 30       	cpi	r24, 0x03	; 3
 26e:	91 05       	cpc	r25, r1
 270:	09 f4       	brne	.+2      	; 0x274 <GPIO_SetPinState+0x56>
 272:	67 c0       	rjmp	.+206    	; 0x342 <GPIO_SetPinState+0x124>
 274:	87 c0       	rjmp	.+270    	; 0x384 <GPIO_SetPinState+0x166>
    {
    case PORT_A :
        SetRegisterPin(DATA_REGISTER_WRITE_PORTA,pin,state) ;
 276:	ab e3       	ldi	r26, 0x3B	; 59
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	eb e3       	ldi	r30, 0x3B	; 59
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	48 2f       	mov	r20, r24
 282:	8a 81       	ldd	r24, Y+2	; 0x02
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <GPIO_SetPinState+0x74>
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	2a 95       	dec	r18
 294:	e2 f7       	brpl	.-8      	; 0x28e <GPIO_SetPinState+0x70>
 296:	80 95       	com	r24
 298:	48 23       	and	r20, r24
 29a:	8b 81       	ldd	r24, Y+3	; 0x03
 29c:	28 2f       	mov	r18, r24
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	8a 81       	ldd	r24, Y+2	; 0x02
 2a2:	88 2f       	mov	r24, r24
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	b9 01       	movw	r22, r18
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <GPIO_SetPinState+0x90>
 2aa:	66 0f       	add	r22, r22
 2ac:	77 1f       	adc	r23, r23
 2ae:	8a 95       	dec	r24
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <GPIO_SetPinState+0x8c>
 2b2:	cb 01       	movw	r24, r22
 2b4:	84 2b       	or	r24, r20
 2b6:	8c 93       	st	X, r24
 2b8:	65 c0       	rjmp	.+202    	; 0x384 <GPIO_SetPinState+0x166>
    break;
    case PORT_B :
        SetRegisterPin(DATA_REGISTER_WRITE_PORTB,pin,state) ;
 2ba:	a8 e3       	ldi	r26, 0x38	; 56
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	e8 e3       	ldi	r30, 0x38	; 56
 2c0:	f0 e0       	ldi	r31, 0x00	; 0
 2c2:	80 81       	ld	r24, Z
 2c4:	48 2f       	mov	r20, r24
 2c6:	8a 81       	ldd	r24, Y+2	; 0x02
 2c8:	28 2f       	mov	r18, r24
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <GPIO_SetPinState+0xb8>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	2a 95       	dec	r18
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <GPIO_SetPinState+0xb4>
 2da:	80 95       	com	r24
 2dc:	48 23       	and	r20, r24
 2de:	8b 81       	ldd	r24, Y+3	; 0x03
 2e0:	28 2f       	mov	r18, r24
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	8a 81       	ldd	r24, Y+2	; 0x02
 2e6:	88 2f       	mov	r24, r24
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	b9 01       	movw	r22, r18
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <GPIO_SetPinState+0xd4>
 2ee:	66 0f       	add	r22, r22
 2f0:	77 1f       	adc	r23, r23
 2f2:	8a 95       	dec	r24
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <GPIO_SetPinState+0xd0>
 2f6:	cb 01       	movw	r24, r22
 2f8:	84 2b       	or	r24, r20
 2fa:	8c 93       	st	X, r24
 2fc:	43 c0       	rjmp	.+134    	; 0x384 <GPIO_SetPinState+0x166>
    break;
    case PORT_C :
        SetRegisterPin(DATA_REGISTER_WRITE_PORTC,pin,state) ;
 2fe:	a5 e3       	ldi	r26, 0x35	; 53
 300:	b0 e0       	ldi	r27, 0x00	; 0
 302:	e5 e3       	ldi	r30, 0x35	; 53
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	80 81       	ld	r24, Z
 308:	48 2f       	mov	r20, r24
 30a:	8a 81       	ldd	r24, Y+2	; 0x02
 30c:	28 2f       	mov	r18, r24
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 c0       	rjmp	.+4      	; 0x31a <GPIO_SetPinState+0xfc>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	2a 95       	dec	r18
 31c:	e2 f7       	brpl	.-8      	; 0x316 <GPIO_SetPinState+0xf8>
 31e:	80 95       	com	r24
 320:	48 23       	and	r20, r24
 322:	8b 81       	ldd	r24, Y+3	; 0x03
 324:	28 2f       	mov	r18, r24
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	8a 81       	ldd	r24, Y+2	; 0x02
 32a:	88 2f       	mov	r24, r24
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	b9 01       	movw	r22, r18
 330:	02 c0       	rjmp	.+4      	; 0x336 <GPIO_SetPinState+0x118>
 332:	66 0f       	add	r22, r22
 334:	77 1f       	adc	r23, r23
 336:	8a 95       	dec	r24
 338:	e2 f7       	brpl	.-8      	; 0x332 <GPIO_SetPinState+0x114>
 33a:	cb 01       	movw	r24, r22
 33c:	84 2b       	or	r24, r20
 33e:	8c 93       	st	X, r24
 340:	21 c0       	rjmp	.+66     	; 0x384 <GPIO_SetPinState+0x166>
    break;
    case PORT_D :
        SetRegisterPin(DATA_REGISTER_WRITE_PORTD,pin,state) ;
 342:	a2 e3       	ldi	r26, 0x32	; 50
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	e2 e3       	ldi	r30, 0x32	; 50
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	80 81       	ld	r24, Z
 34c:	48 2f       	mov	r20, r24
 34e:	8a 81       	ldd	r24, Y+2	; 0x02
 350:	28 2f       	mov	r18, r24
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	02 c0       	rjmp	.+4      	; 0x35e <GPIO_SetPinState+0x140>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	2a 95       	dec	r18
 360:	e2 f7       	brpl	.-8      	; 0x35a <GPIO_SetPinState+0x13c>
 362:	80 95       	com	r24
 364:	48 23       	and	r20, r24
 366:	8b 81       	ldd	r24, Y+3	; 0x03
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	8a 81       	ldd	r24, Y+2	; 0x02
 36e:	88 2f       	mov	r24, r24
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	b9 01       	movw	r22, r18
 374:	02 c0       	rjmp	.+4      	; 0x37a <GPIO_SetPinState+0x15c>
 376:	66 0f       	add	r22, r22
 378:	77 1f       	adc	r23, r23
 37a:	8a 95       	dec	r24
 37c:	e2 f7       	brpl	.-8      	; 0x376 <GPIO_SetPinState+0x158>
 37e:	cb 01       	movw	r24, r22
 380:	84 2b       	or	r24, r20
 382:	8c 93       	st	X, r24
    break;
    default :
        /* should not be here */
    break ;
    }
}
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	0f 90       	pop	r0
 38a:	0f 90       	pop	r0
 38c:	0f 90       	pop	r0
 38e:	cf 91       	pop	r28
 390:	df 91       	pop	r29
 392:	08 95       	ret

00000394 <GPIO_SetPinDirection>:
void GPIO_SetPinDirection(tPORT port, tPIN pin ,tPIN_DIRECTION direction)
{
 394:	df 93       	push	r29
 396:	cf 93       	push	r28
 398:	00 d0       	rcall	.+0      	; 0x39a <GPIO_SetPinDirection+0x6>
 39a:	00 d0       	rcall	.+0      	; 0x39c <GPIO_SetPinDirection+0x8>
 39c:	0f 92       	push	r0
 39e:	cd b7       	in	r28, 0x3d	; 61
 3a0:	de b7       	in	r29, 0x3e	; 62
 3a2:	89 83       	std	Y+1, r24	; 0x01
 3a4:	6a 83       	std	Y+2, r22	; 0x02
 3a6:	4b 83       	std	Y+3, r20	; 0x03
    switch(port)
 3a8:	89 81       	ldd	r24, Y+1	; 0x01
 3aa:	28 2f       	mov	r18, r24
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	3d 83       	std	Y+5, r19	; 0x05
 3b0:	2c 83       	std	Y+4, r18	; 0x04
 3b2:	6c 81       	ldd	r22, Y+4	; 0x04
 3b4:	7d 81       	ldd	r23, Y+5	; 0x05
 3b6:	61 30       	cpi	r22, 0x01	; 1
 3b8:	71 05       	cpc	r23, r1
 3ba:	d1 f1       	breq	.+116    	; 0x430 <GPIO_SetPinDirection+0x9c>
 3bc:	8c 81       	ldd	r24, Y+4	; 0x04
 3be:	9d 81       	ldd	r25, Y+5	; 0x05
 3c0:	82 30       	cpi	r24, 0x02	; 2
 3c2:	91 05       	cpc	r25, r1
 3c4:	34 f4       	brge	.+12     	; 0x3d2 <GPIO_SetPinDirection+0x3e>
 3c6:	2c 81       	ldd	r18, Y+4	; 0x04
 3c8:	3d 81       	ldd	r19, Y+5	; 0x05
 3ca:	21 15       	cp	r18, r1
 3cc:	31 05       	cpc	r19, r1
 3ce:	71 f0       	breq	.+28     	; 0x3ec <GPIO_SetPinDirection+0x58>
 3d0:	94 c0       	rjmp	.+296    	; 0x4fa <GPIO_SetPinDirection+0x166>
 3d2:	6c 81       	ldd	r22, Y+4	; 0x04
 3d4:	7d 81       	ldd	r23, Y+5	; 0x05
 3d6:	62 30       	cpi	r22, 0x02	; 2
 3d8:	71 05       	cpc	r23, r1
 3da:	09 f4       	brne	.+2      	; 0x3de <GPIO_SetPinDirection+0x4a>
 3dc:	4b c0       	rjmp	.+150    	; 0x474 <GPIO_SetPinDirection+0xe0>
 3de:	8c 81       	ldd	r24, Y+4	; 0x04
 3e0:	9d 81       	ldd	r25, Y+5	; 0x05
 3e2:	83 30       	cpi	r24, 0x03	; 3
 3e4:	91 05       	cpc	r25, r1
 3e6:	09 f4       	brne	.+2      	; 0x3ea <GPIO_SetPinDirection+0x56>
 3e8:	67 c0       	rjmp	.+206    	; 0x4b8 <GPIO_SetPinDirection+0x124>
 3ea:	87 c0       	rjmp	.+270    	; 0x4fa <GPIO_SetPinDirection+0x166>
    {
    case PORT_A :
        SetRegisterPin(DIRECTION_REGISTER_PORTA,pin,direction) ;
 3ec:	aa e3       	ldi	r26, 0x3A	; 58
 3ee:	b0 e0       	ldi	r27, 0x00	; 0
 3f0:	ea e3       	ldi	r30, 0x3A	; 58
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	80 81       	ld	r24, Z
 3f6:	48 2f       	mov	r20, r24
 3f8:	8a 81       	ldd	r24, Y+2	; 0x02
 3fa:	28 2f       	mov	r18, r24
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <GPIO_SetPinDirection+0x74>
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	2a 95       	dec	r18
 40a:	e2 f7       	brpl	.-8      	; 0x404 <GPIO_SetPinDirection+0x70>
 40c:	80 95       	com	r24
 40e:	48 23       	and	r20, r24
 410:	8b 81       	ldd	r24, Y+3	; 0x03
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	8a 81       	ldd	r24, Y+2	; 0x02
 418:	88 2f       	mov	r24, r24
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	b9 01       	movw	r22, r18
 41e:	02 c0       	rjmp	.+4      	; 0x424 <GPIO_SetPinDirection+0x90>
 420:	66 0f       	add	r22, r22
 422:	77 1f       	adc	r23, r23
 424:	8a 95       	dec	r24
 426:	e2 f7       	brpl	.-8      	; 0x420 <GPIO_SetPinDirection+0x8c>
 428:	cb 01       	movw	r24, r22
 42a:	84 2b       	or	r24, r20
 42c:	8c 93       	st	X, r24
 42e:	65 c0       	rjmp	.+202    	; 0x4fa <GPIO_SetPinDirection+0x166>
    break;
    case PORT_B :
        SetRegisterPin(DIRECTION_REGISTER_PORTB,pin,direction) ;
 430:	a7 e3       	ldi	r26, 0x37	; 55
 432:	b0 e0       	ldi	r27, 0x00	; 0
 434:	e7 e3       	ldi	r30, 0x37	; 55
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	48 2f       	mov	r20, r24
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	28 2f       	mov	r18, r24
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 c0       	rjmp	.+4      	; 0x44c <GPIO_SetPinDirection+0xb8>
 448:	88 0f       	add	r24, r24
 44a:	99 1f       	adc	r25, r25
 44c:	2a 95       	dec	r18
 44e:	e2 f7       	brpl	.-8      	; 0x448 <GPIO_SetPinDirection+0xb4>
 450:	80 95       	com	r24
 452:	48 23       	and	r20, r24
 454:	8b 81       	ldd	r24, Y+3	; 0x03
 456:	28 2f       	mov	r18, r24
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	8a 81       	ldd	r24, Y+2	; 0x02
 45c:	88 2f       	mov	r24, r24
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	b9 01       	movw	r22, r18
 462:	02 c0       	rjmp	.+4      	; 0x468 <GPIO_SetPinDirection+0xd4>
 464:	66 0f       	add	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	8a 95       	dec	r24
 46a:	e2 f7       	brpl	.-8      	; 0x464 <GPIO_SetPinDirection+0xd0>
 46c:	cb 01       	movw	r24, r22
 46e:	84 2b       	or	r24, r20
 470:	8c 93       	st	X, r24
 472:	43 c0       	rjmp	.+134    	; 0x4fa <GPIO_SetPinDirection+0x166>
    break;
    case PORT_C :
        SetRegisterPin(DIRECTION_REGISTER_PORTC,pin,direction) ;
 474:	a4 e3       	ldi	r26, 0x34	; 52
 476:	b0 e0       	ldi	r27, 0x00	; 0
 478:	e4 e3       	ldi	r30, 0x34	; 52
 47a:	f0 e0       	ldi	r31, 0x00	; 0
 47c:	80 81       	ld	r24, Z
 47e:	48 2f       	mov	r20, r24
 480:	8a 81       	ldd	r24, Y+2	; 0x02
 482:	28 2f       	mov	r18, r24
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	02 c0       	rjmp	.+4      	; 0x490 <GPIO_SetPinDirection+0xfc>
 48c:	88 0f       	add	r24, r24
 48e:	99 1f       	adc	r25, r25
 490:	2a 95       	dec	r18
 492:	e2 f7       	brpl	.-8      	; 0x48c <GPIO_SetPinDirection+0xf8>
 494:	80 95       	com	r24
 496:	48 23       	and	r20, r24
 498:	8b 81       	ldd	r24, Y+3	; 0x03
 49a:	28 2f       	mov	r18, r24
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	88 2f       	mov	r24, r24
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	b9 01       	movw	r22, r18
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <GPIO_SetPinDirection+0x118>
 4a8:	66 0f       	add	r22, r22
 4aa:	77 1f       	adc	r23, r23
 4ac:	8a 95       	dec	r24
 4ae:	e2 f7       	brpl	.-8      	; 0x4a8 <GPIO_SetPinDirection+0x114>
 4b0:	cb 01       	movw	r24, r22
 4b2:	84 2b       	or	r24, r20
 4b4:	8c 93       	st	X, r24
 4b6:	21 c0       	rjmp	.+66     	; 0x4fa <GPIO_SetPinDirection+0x166>
    break;
    case PORT_D :
        SetRegisterPin(DIRECTION_REGISTER_PORTD,pin,direction) ;
 4b8:	a1 e3       	ldi	r26, 0x31	; 49
 4ba:	b0 e0       	ldi	r27, 0x00	; 0
 4bc:	e1 e3       	ldi	r30, 0x31	; 49
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	48 2f       	mov	r20, r24
 4c4:	8a 81       	ldd	r24, Y+2	; 0x02
 4c6:	28 2f       	mov	r18, r24
 4c8:	30 e0       	ldi	r19, 0x00	; 0
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <GPIO_SetPinDirection+0x140>
 4d0:	88 0f       	add	r24, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	2a 95       	dec	r18
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <GPIO_SetPinDirection+0x13c>
 4d8:	80 95       	com	r24
 4da:	48 23       	and	r20, r24
 4dc:	8b 81       	ldd	r24, Y+3	; 0x03
 4de:	28 2f       	mov	r18, r24
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	88 2f       	mov	r24, r24
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	b9 01       	movw	r22, r18
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <GPIO_SetPinDirection+0x15c>
 4ec:	66 0f       	add	r22, r22
 4ee:	77 1f       	adc	r23, r23
 4f0:	8a 95       	dec	r24
 4f2:	e2 f7       	brpl	.-8      	; 0x4ec <GPIO_SetPinDirection+0x158>
 4f4:	cb 01       	movw	r24, r22
 4f6:	84 2b       	or	r24, r20
 4f8:	8c 93       	st	X, r24
    break;
    default :
        /* should not be here */
    break ;
    }
}
 4fa:	0f 90       	pop	r0
 4fc:	0f 90       	pop	r0
 4fe:	0f 90       	pop	r0
 500:	0f 90       	pop	r0
 502:	0f 90       	pop	r0
 504:	cf 91       	pop	r28
 506:	df 91       	pop	r29
 508:	08 95       	ret

0000050a <GPIO_GetPortData>:
U8 GPIO_GetPortData(tPORT port)
{
 50a:	df 93       	push	r29
 50c:	cf 93       	push	r28
 50e:	00 d0       	rcall	.+0      	; 0x510 <GPIO_GetPortData+0x6>
 510:	00 d0       	rcall	.+0      	; 0x512 <GPIO_GetPortData+0x8>
 512:	cd b7       	in	r28, 0x3d	; 61
 514:	de b7       	in	r29, 0x3e	; 62
 516:	8a 83       	std	Y+2, r24	; 0x02
    U8 ret = 0 ;
 518:	19 82       	std	Y+1, r1	; 0x01
    switch(port)
 51a:	8a 81       	ldd	r24, Y+2	; 0x02
 51c:	28 2f       	mov	r18, r24
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	3c 83       	std	Y+4, r19	; 0x04
 522:	2b 83       	std	Y+3, r18	; 0x03
 524:	8b 81       	ldd	r24, Y+3	; 0x03
 526:	9c 81       	ldd	r25, Y+4	; 0x04
 528:	81 30       	cpi	r24, 0x01	; 1
 52a:	91 05       	cpc	r25, r1
 52c:	d1 f0       	breq	.+52     	; 0x562 <GPIO_GetPortData+0x58>
 52e:	2b 81       	ldd	r18, Y+3	; 0x03
 530:	3c 81       	ldd	r19, Y+4	; 0x04
 532:	22 30       	cpi	r18, 0x02	; 2
 534:	31 05       	cpc	r19, r1
 536:	2c f4       	brge	.+10     	; 0x542 <GPIO_GetPortData+0x38>
 538:	8b 81       	ldd	r24, Y+3	; 0x03
 53a:	9c 81       	ldd	r25, Y+4	; 0x04
 53c:	00 97       	sbiw	r24, 0x00	; 0
 53e:	61 f0       	breq	.+24     	; 0x558 <GPIO_GetPortData+0x4e>
 540:	1e c0       	rjmp	.+60     	; 0x57e <GPIO_GetPortData+0x74>
 542:	2b 81       	ldd	r18, Y+3	; 0x03
 544:	3c 81       	ldd	r19, Y+4	; 0x04
 546:	22 30       	cpi	r18, 0x02	; 2
 548:	31 05       	cpc	r19, r1
 54a:	81 f0       	breq	.+32     	; 0x56c <GPIO_GetPortData+0x62>
 54c:	8b 81       	ldd	r24, Y+3	; 0x03
 54e:	9c 81       	ldd	r25, Y+4	; 0x04
 550:	83 30       	cpi	r24, 0x03	; 3
 552:	91 05       	cpc	r25, r1
 554:	81 f0       	breq	.+32     	; 0x576 <GPIO_GetPortData+0x6c>
 556:	13 c0       	rjmp	.+38     	; 0x57e <GPIO_GetPortData+0x74>
    {
    case PORT_A :
      ret=  ReadRegisterValue(DATA_REGISTER_READ_PORTA) ;
 558:	e9 e3       	ldi	r30, 0x39	; 57
 55a:	f0 e0       	ldi	r31, 0x00	; 0
 55c:	80 81       	ld	r24, Z
 55e:	89 83       	std	Y+1, r24	; 0x01
 560:	0e c0       	rjmp	.+28     	; 0x57e <GPIO_GetPortData+0x74>
    break;
    case PORT_B :
      ret=  ReadRegisterValue(DATA_REGISTER_READ_PORTB) ;
 562:	e6 e3       	ldi	r30, 0x36	; 54
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	80 81       	ld	r24, Z
 568:	89 83       	std	Y+1, r24	; 0x01
 56a:	09 c0       	rjmp	.+18     	; 0x57e <GPIO_GetPortData+0x74>
    break;
    case PORT_C :
      ret=  ReadRegisterValue(DATA_REGISTER_READ_PORTC) ;
 56c:	e3 e3       	ldi	r30, 0x33	; 51
 56e:	f0 e0       	ldi	r31, 0x00	; 0
 570:	80 81       	ld	r24, Z
 572:	89 83       	std	Y+1, r24	; 0x01
 574:	04 c0       	rjmp	.+8      	; 0x57e <GPIO_GetPortData+0x74>
    break;
    case PORT_D :
      ret=  ReadRegisterValue(DATA_REGISTER_READ_PORTD) ;
 576:	e0 e3       	ldi	r30, 0x30	; 48
 578:	f0 e0       	ldi	r31, 0x00	; 0
 57a:	80 81       	ld	r24, Z
 57c:	89 83       	std	Y+1, r24	; 0x01
    break;
    default :
        /* should not be here */
    break ;
    }
    return ret ;
 57e:	89 81       	ldd	r24, Y+1	; 0x01
}
 580:	0f 90       	pop	r0
 582:	0f 90       	pop	r0
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	cf 91       	pop	r28
 58a:	df 91       	pop	r29
 58c:	08 95       	ret

0000058e <GPIO_GetPortDirection>:
U8 GPIO_GetPortDirection(tPORT port)
{
 58e:	df 93       	push	r29
 590:	cf 93       	push	r28
 592:	00 d0       	rcall	.+0      	; 0x594 <GPIO_GetPortDirection+0x6>
 594:	00 d0       	rcall	.+0      	; 0x596 <GPIO_GetPortDirection+0x8>
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	8a 83       	std	Y+2, r24	; 0x02
    U8 ret = 0 ;
 59c:	19 82       	std	Y+1, r1	; 0x01
    switch(port)
 59e:	8a 81       	ldd	r24, Y+2	; 0x02
 5a0:	28 2f       	mov	r18, r24
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	3c 83       	std	Y+4, r19	; 0x04
 5a6:	2b 83       	std	Y+3, r18	; 0x03
 5a8:	8b 81       	ldd	r24, Y+3	; 0x03
 5aa:	9c 81       	ldd	r25, Y+4	; 0x04
 5ac:	81 30       	cpi	r24, 0x01	; 1
 5ae:	91 05       	cpc	r25, r1
 5b0:	d1 f0       	breq	.+52     	; 0x5e6 <GPIO_GetPortDirection+0x58>
 5b2:	2b 81       	ldd	r18, Y+3	; 0x03
 5b4:	3c 81       	ldd	r19, Y+4	; 0x04
 5b6:	22 30       	cpi	r18, 0x02	; 2
 5b8:	31 05       	cpc	r19, r1
 5ba:	2c f4       	brge	.+10     	; 0x5c6 <GPIO_GetPortDirection+0x38>
 5bc:	8b 81       	ldd	r24, Y+3	; 0x03
 5be:	9c 81       	ldd	r25, Y+4	; 0x04
 5c0:	00 97       	sbiw	r24, 0x00	; 0
 5c2:	61 f0       	breq	.+24     	; 0x5dc <GPIO_GetPortDirection+0x4e>
 5c4:	1e c0       	rjmp	.+60     	; 0x602 <GPIO_GetPortDirection+0x74>
 5c6:	2b 81       	ldd	r18, Y+3	; 0x03
 5c8:	3c 81       	ldd	r19, Y+4	; 0x04
 5ca:	22 30       	cpi	r18, 0x02	; 2
 5cc:	31 05       	cpc	r19, r1
 5ce:	81 f0       	breq	.+32     	; 0x5f0 <GPIO_GetPortDirection+0x62>
 5d0:	8b 81       	ldd	r24, Y+3	; 0x03
 5d2:	9c 81       	ldd	r25, Y+4	; 0x04
 5d4:	83 30       	cpi	r24, 0x03	; 3
 5d6:	91 05       	cpc	r25, r1
 5d8:	81 f0       	breq	.+32     	; 0x5fa <GPIO_GetPortDirection+0x6c>
 5da:	13 c0       	rjmp	.+38     	; 0x602 <GPIO_GetPortDirection+0x74>
    {
    case PORT_A :
      ret=  ReadRegisterValue(DIRECTION_REGISTER_PORTA) ;
 5dc:	ea e3       	ldi	r30, 0x3A	; 58
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	80 81       	ld	r24, Z
 5e2:	89 83       	std	Y+1, r24	; 0x01
 5e4:	0e c0       	rjmp	.+28     	; 0x602 <GPIO_GetPortDirection+0x74>
    break;
    case PORT_B :
      ret=  ReadRegisterValue(DIRECTION_REGISTER_PORTB) ;
 5e6:	e7 e3       	ldi	r30, 0x37	; 55
 5e8:	f0 e0       	ldi	r31, 0x00	; 0
 5ea:	80 81       	ld	r24, Z
 5ec:	89 83       	std	Y+1, r24	; 0x01
 5ee:	09 c0       	rjmp	.+18     	; 0x602 <GPIO_GetPortDirection+0x74>
    break;
    case PORT_C :
      ret=  ReadRegisterValue(DIRECTION_REGISTER_PORTC) ;
 5f0:	e4 e3       	ldi	r30, 0x34	; 52
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	80 81       	ld	r24, Z
 5f6:	89 83       	std	Y+1, r24	; 0x01
 5f8:	04 c0       	rjmp	.+8      	; 0x602 <GPIO_GetPortDirection+0x74>
    break;
    case PORT_D :
      ret=  ReadRegisterValue(DIRECTION_REGISTER_PORTD) ;
 5fa:	e1 e3       	ldi	r30, 0x31	; 49
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	80 81       	ld	r24, Z
 600:	89 83       	std	Y+1, r24	; 0x01
    break;
    default :
        /* should not be here */
    break ;
    }
    return ret ;
 602:	89 81       	ldd	r24, Y+1	; 0x01
}
 604:	0f 90       	pop	r0
 606:	0f 90       	pop	r0
 608:	0f 90       	pop	r0
 60a:	0f 90       	pop	r0
 60c:	cf 91       	pop	r28
 60e:	df 91       	pop	r29
 610:	08 95       	ret

00000612 <GPIO_GetPinState>:
tSTATE GPIO_GetPinState(tPORT port , tPIN pin)
{
 612:	df 93       	push	r29
 614:	cf 93       	push	r28
 616:	00 d0       	rcall	.+0      	; 0x618 <GPIO_GetPinState+0x6>
 618:	00 d0       	rcall	.+0      	; 0x61a <GPIO_GetPinState+0x8>
 61a:	0f 92       	push	r0
 61c:	cd b7       	in	r28, 0x3d	; 61
 61e:	de b7       	in	r29, 0x3e	; 62
 620:	8a 83       	std	Y+2, r24	; 0x02
 622:	6b 83       	std	Y+3, r22	; 0x03
    tSTATE ret = LOW ;
 624:	19 82       	std	Y+1, r1	; 0x01
    switch(port)
 626:	8a 81       	ldd	r24, Y+2	; 0x02
 628:	28 2f       	mov	r18, r24
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	3d 83       	std	Y+5, r19	; 0x05
 62e:	2c 83       	std	Y+4, r18	; 0x04
 630:	4c 81       	ldd	r20, Y+4	; 0x04
 632:	5d 81       	ldd	r21, Y+5	; 0x05
 634:	41 30       	cpi	r20, 0x01	; 1
 636:	51 05       	cpc	r21, r1
 638:	b1 f1       	breq	.+108    	; 0x6a6 <GPIO_GetPinState+0x94>
 63a:	8c 81       	ldd	r24, Y+4	; 0x04
 63c:	9d 81       	ldd	r25, Y+5	; 0x05
 63e:	82 30       	cpi	r24, 0x02	; 2
 640:	91 05       	cpc	r25, r1
 642:	34 f4       	brge	.+12     	; 0x650 <GPIO_GetPinState+0x3e>
 644:	2c 81       	ldd	r18, Y+4	; 0x04
 646:	3d 81       	ldd	r19, Y+5	; 0x05
 648:	21 15       	cp	r18, r1
 64a:	31 05       	cpc	r19, r1
 64c:	71 f0       	breq	.+28     	; 0x66a <GPIO_GetPinState+0x58>
 64e:	84 c0       	rjmp	.+264    	; 0x758 <GPIO_GetPinState+0x146>
 650:	4c 81       	ldd	r20, Y+4	; 0x04
 652:	5d 81       	ldd	r21, Y+5	; 0x05
 654:	42 30       	cpi	r20, 0x02	; 2
 656:	51 05       	cpc	r21, r1
 658:	09 f4       	brne	.+2      	; 0x65c <GPIO_GetPinState+0x4a>
 65a:	43 c0       	rjmp	.+134    	; 0x6e2 <GPIO_GetPinState+0xd0>
 65c:	8c 81       	ldd	r24, Y+4	; 0x04
 65e:	9d 81       	ldd	r25, Y+5	; 0x05
 660:	83 30       	cpi	r24, 0x03	; 3
 662:	91 05       	cpc	r25, r1
 664:	09 f4       	brne	.+2      	; 0x668 <GPIO_GetPinState+0x56>
 666:	5b c0       	rjmp	.+182    	; 0x71e <GPIO_GetPinState+0x10c>
 668:	77 c0       	rjmp	.+238    	; 0x758 <GPIO_GetPinState+0x146>
    {
    case PORT_A :
      ret=  ReadRegisterPinValue(DATA_REGISTER_READ_PORTA,pin) ;
 66a:	e9 e3       	ldi	r30, 0x39	; 57
 66c:	f0 e0       	ldi	r31, 0x00	; 0
 66e:	80 81       	ld	r24, Z
 670:	48 2f       	mov	r20, r24
 672:	50 e0       	ldi	r21, 0x00	; 0
 674:	8b 81       	ldd	r24, Y+3	; 0x03
 676:	28 2f       	mov	r18, r24
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	02 c0       	rjmp	.+4      	; 0x684 <GPIO_GetPinState+0x72>
 680:	88 0f       	add	r24, r24
 682:	99 1f       	adc	r25, r25
 684:	2a 95       	dec	r18
 686:	e2 f7       	brpl	.-8      	; 0x680 <GPIO_GetPinState+0x6e>
 688:	9a 01       	movw	r18, r20
 68a:	28 23       	and	r18, r24
 68c:	39 23       	and	r19, r25
 68e:	8b 81       	ldd	r24, Y+3	; 0x03
 690:	88 2f       	mov	r24, r24
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	a9 01       	movw	r20, r18
 696:	02 c0       	rjmp	.+4      	; 0x69c <GPIO_GetPinState+0x8a>
 698:	55 95       	asr	r21
 69a:	47 95       	ror	r20
 69c:	8a 95       	dec	r24
 69e:	e2 f7       	brpl	.-8      	; 0x698 <GPIO_GetPinState+0x86>
 6a0:	ca 01       	movw	r24, r20
 6a2:	89 83       	std	Y+1, r24	; 0x01
 6a4:	59 c0       	rjmp	.+178    	; 0x758 <GPIO_GetPinState+0x146>
    break;
    case PORT_B :
      ret=  ReadRegisterPinValue(DATA_REGISTER_READ_PORTB,pin) ;
 6a6:	e6 e3       	ldi	r30, 0x36	; 54
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	48 2f       	mov	r20, r24
 6ae:	50 e0       	ldi	r21, 0x00	; 0
 6b0:	8b 81       	ldd	r24, Y+3	; 0x03
 6b2:	28 2f       	mov	r18, r24
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <GPIO_GetPinState+0xae>
 6bc:	88 0f       	add	r24, r24
 6be:	99 1f       	adc	r25, r25
 6c0:	2a 95       	dec	r18
 6c2:	e2 f7       	brpl	.-8      	; 0x6bc <GPIO_GetPinState+0xaa>
 6c4:	9a 01       	movw	r18, r20
 6c6:	28 23       	and	r18, r24
 6c8:	39 23       	and	r19, r25
 6ca:	8b 81       	ldd	r24, Y+3	; 0x03
 6cc:	88 2f       	mov	r24, r24
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	a9 01       	movw	r20, r18
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <GPIO_GetPinState+0xc6>
 6d4:	55 95       	asr	r21
 6d6:	47 95       	ror	r20
 6d8:	8a 95       	dec	r24
 6da:	e2 f7       	brpl	.-8      	; 0x6d4 <GPIO_GetPinState+0xc2>
 6dc:	ca 01       	movw	r24, r20
 6de:	89 83       	std	Y+1, r24	; 0x01
 6e0:	3b c0       	rjmp	.+118    	; 0x758 <GPIO_GetPinState+0x146>
    break;
    case PORT_C :
      ret=  ReadRegisterPinValue(DATA_REGISTER_READ_PORTC,pin) ;
 6e2:	e3 e3       	ldi	r30, 0x33	; 51
 6e4:	f0 e0       	ldi	r31, 0x00	; 0
 6e6:	80 81       	ld	r24, Z
 6e8:	48 2f       	mov	r20, r24
 6ea:	50 e0       	ldi	r21, 0x00	; 0
 6ec:	8b 81       	ldd	r24, Y+3	; 0x03
 6ee:	28 2f       	mov	r18, r24
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	81 e0       	ldi	r24, 0x01	; 1
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <GPIO_GetPinState+0xea>
 6f8:	88 0f       	add	r24, r24
 6fa:	99 1f       	adc	r25, r25
 6fc:	2a 95       	dec	r18
 6fe:	e2 f7       	brpl	.-8      	; 0x6f8 <GPIO_GetPinState+0xe6>
 700:	9a 01       	movw	r18, r20
 702:	28 23       	and	r18, r24
 704:	39 23       	and	r19, r25
 706:	8b 81       	ldd	r24, Y+3	; 0x03
 708:	88 2f       	mov	r24, r24
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	a9 01       	movw	r20, r18
 70e:	02 c0       	rjmp	.+4      	; 0x714 <GPIO_GetPinState+0x102>
 710:	55 95       	asr	r21
 712:	47 95       	ror	r20
 714:	8a 95       	dec	r24
 716:	e2 f7       	brpl	.-8      	; 0x710 <GPIO_GetPinState+0xfe>
 718:	ca 01       	movw	r24, r20
 71a:	89 83       	std	Y+1, r24	; 0x01
 71c:	1d c0       	rjmp	.+58     	; 0x758 <GPIO_GetPinState+0x146>
    break;
    case PORT_D :
      ret=  ReadRegisterPinValue(DATA_REGISTER_READ_PORTD,pin) ;
 71e:	e0 e3       	ldi	r30, 0x30	; 48
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	80 81       	ld	r24, Z
 724:	48 2f       	mov	r20, r24
 726:	50 e0       	ldi	r21, 0x00	; 0
 728:	8b 81       	ldd	r24, Y+3	; 0x03
 72a:	28 2f       	mov	r18, r24
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	81 e0       	ldi	r24, 0x01	; 1
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	02 c0       	rjmp	.+4      	; 0x738 <GPIO_GetPinState+0x126>
 734:	88 0f       	add	r24, r24
 736:	99 1f       	adc	r25, r25
 738:	2a 95       	dec	r18
 73a:	e2 f7       	brpl	.-8      	; 0x734 <GPIO_GetPinState+0x122>
 73c:	9a 01       	movw	r18, r20
 73e:	28 23       	and	r18, r24
 740:	39 23       	and	r19, r25
 742:	8b 81       	ldd	r24, Y+3	; 0x03
 744:	88 2f       	mov	r24, r24
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	a9 01       	movw	r20, r18
 74a:	02 c0       	rjmp	.+4      	; 0x750 <GPIO_GetPinState+0x13e>
 74c:	55 95       	asr	r21
 74e:	47 95       	ror	r20
 750:	8a 95       	dec	r24
 752:	e2 f7       	brpl	.-8      	; 0x74c <GPIO_GetPinState+0x13a>
 754:	ca 01       	movw	r24, r20
 756:	89 83       	std	Y+1, r24	; 0x01
    break;
    default :
        /* should not be here */
    break ;
    }
    return ret ;
 758:	89 81       	ldd	r24, Y+1	; 0x01
}
 75a:	0f 90       	pop	r0
 75c:	0f 90       	pop	r0
 75e:	0f 90       	pop	r0
 760:	0f 90       	pop	r0
 762:	0f 90       	pop	r0
 764:	cf 91       	pop	r28
 766:	df 91       	pop	r29
 768:	08 95       	ret

0000076a <GPIO_GetPinDirection>:
tPIN_DIRECTION GPIO_GetPinDirection(tPORT port, tPIN pin)
{
 76a:	df 93       	push	r29
 76c:	cf 93       	push	r28
 76e:	00 d0       	rcall	.+0      	; 0x770 <GPIO_GetPinDirection+0x6>
 770:	00 d0       	rcall	.+0      	; 0x772 <GPIO_GetPinDirection+0x8>
 772:	0f 92       	push	r0
 774:	cd b7       	in	r28, 0x3d	; 61
 776:	de b7       	in	r29, 0x3e	; 62
 778:	8a 83       	std	Y+2, r24	; 0x02
 77a:	6b 83       	std	Y+3, r22	; 0x03
    tPIN_DIRECTION ret = PIN_OUTPUT ;
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	89 83       	std	Y+1, r24	; 0x01
    switch(port)
 780:	8a 81       	ldd	r24, Y+2	; 0x02
 782:	28 2f       	mov	r18, r24
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	3d 83       	std	Y+5, r19	; 0x05
 788:	2c 83       	std	Y+4, r18	; 0x04
 78a:	4c 81       	ldd	r20, Y+4	; 0x04
 78c:	5d 81       	ldd	r21, Y+5	; 0x05
 78e:	41 30       	cpi	r20, 0x01	; 1
 790:	51 05       	cpc	r21, r1
 792:	b1 f1       	breq	.+108    	; 0x800 <GPIO_GetPinDirection+0x96>
 794:	8c 81       	ldd	r24, Y+4	; 0x04
 796:	9d 81       	ldd	r25, Y+5	; 0x05
 798:	82 30       	cpi	r24, 0x02	; 2
 79a:	91 05       	cpc	r25, r1
 79c:	34 f4       	brge	.+12     	; 0x7aa <GPIO_GetPinDirection+0x40>
 79e:	2c 81       	ldd	r18, Y+4	; 0x04
 7a0:	3d 81       	ldd	r19, Y+5	; 0x05
 7a2:	21 15       	cp	r18, r1
 7a4:	31 05       	cpc	r19, r1
 7a6:	71 f0       	breq	.+28     	; 0x7c4 <GPIO_GetPinDirection+0x5a>
 7a8:	84 c0       	rjmp	.+264    	; 0x8b2 <__stack+0x53>
 7aa:	4c 81       	ldd	r20, Y+4	; 0x04
 7ac:	5d 81       	ldd	r21, Y+5	; 0x05
 7ae:	42 30       	cpi	r20, 0x02	; 2
 7b0:	51 05       	cpc	r21, r1
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <GPIO_GetPinDirection+0x4c>
 7b4:	43 c0       	rjmp	.+134    	; 0x83c <GPIO_GetPinDirection+0xd2>
 7b6:	8c 81       	ldd	r24, Y+4	; 0x04
 7b8:	9d 81       	ldd	r25, Y+5	; 0x05
 7ba:	83 30       	cpi	r24, 0x03	; 3
 7bc:	91 05       	cpc	r25, r1
 7be:	09 f4       	brne	.+2      	; 0x7c2 <GPIO_GetPinDirection+0x58>
 7c0:	5b c0       	rjmp	.+182    	; 0x878 <__stack+0x19>
 7c2:	77 c0       	rjmp	.+238    	; 0x8b2 <__stack+0x53>
    {
    case PORT_A :
      ret=  ReadRegisterPinValue(DIRECTION_REGISTER_PORTA,pin) ;
 7c4:	ea e3       	ldi	r30, 0x3A	; 58
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	80 81       	ld	r24, Z
 7ca:	48 2f       	mov	r20, r24
 7cc:	50 e0       	ldi	r21, 0x00	; 0
 7ce:	8b 81       	ldd	r24, Y+3	; 0x03
 7d0:	28 2f       	mov	r18, r24
 7d2:	30 e0       	ldi	r19, 0x00	; 0
 7d4:	81 e0       	ldi	r24, 0x01	; 1
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <GPIO_GetPinDirection+0x74>
 7da:	88 0f       	add	r24, r24
 7dc:	99 1f       	adc	r25, r25
 7de:	2a 95       	dec	r18
 7e0:	e2 f7       	brpl	.-8      	; 0x7da <GPIO_GetPinDirection+0x70>
 7e2:	9a 01       	movw	r18, r20
 7e4:	28 23       	and	r18, r24
 7e6:	39 23       	and	r19, r25
 7e8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ea:	88 2f       	mov	r24, r24
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	a9 01       	movw	r20, r18
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <GPIO_GetPinDirection+0x8c>
 7f2:	55 95       	asr	r21
 7f4:	47 95       	ror	r20
 7f6:	8a 95       	dec	r24
 7f8:	e2 f7       	brpl	.-8      	; 0x7f2 <GPIO_GetPinDirection+0x88>
 7fa:	ca 01       	movw	r24, r20
 7fc:	89 83       	std	Y+1, r24	; 0x01
 7fe:	59 c0       	rjmp	.+178    	; 0x8b2 <__stack+0x53>
    break;
    case PORT_B :
      ret=  ReadRegisterPinValue(DIRECTION_REGISTER_PORTB,pin) ;
 800:	e7 e3       	ldi	r30, 0x37	; 55
 802:	f0 e0       	ldi	r31, 0x00	; 0
 804:	80 81       	ld	r24, Z
 806:	48 2f       	mov	r20, r24
 808:	50 e0       	ldi	r21, 0x00	; 0
 80a:	8b 81       	ldd	r24, Y+3	; 0x03
 80c:	28 2f       	mov	r18, r24
 80e:	30 e0       	ldi	r19, 0x00	; 0
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	02 c0       	rjmp	.+4      	; 0x81a <GPIO_GetPinDirection+0xb0>
 816:	88 0f       	add	r24, r24
 818:	99 1f       	adc	r25, r25
 81a:	2a 95       	dec	r18
 81c:	e2 f7       	brpl	.-8      	; 0x816 <GPIO_GetPinDirection+0xac>
 81e:	9a 01       	movw	r18, r20
 820:	28 23       	and	r18, r24
 822:	39 23       	and	r19, r25
 824:	8b 81       	ldd	r24, Y+3	; 0x03
 826:	88 2f       	mov	r24, r24
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	a9 01       	movw	r20, r18
 82c:	02 c0       	rjmp	.+4      	; 0x832 <GPIO_GetPinDirection+0xc8>
 82e:	55 95       	asr	r21
 830:	47 95       	ror	r20
 832:	8a 95       	dec	r24
 834:	e2 f7       	brpl	.-8      	; 0x82e <GPIO_GetPinDirection+0xc4>
 836:	ca 01       	movw	r24, r20
 838:	89 83       	std	Y+1, r24	; 0x01
 83a:	3b c0       	rjmp	.+118    	; 0x8b2 <__stack+0x53>
    break;
    case PORT_C :
      ret=  ReadRegisterPinValue(DIRECTION_REGISTER_PORTC,pin) ;
 83c:	e4 e3       	ldi	r30, 0x34	; 52
 83e:	f0 e0       	ldi	r31, 0x00	; 0
 840:	80 81       	ld	r24, Z
 842:	48 2f       	mov	r20, r24
 844:	50 e0       	ldi	r21, 0x00	; 0
 846:	8b 81       	ldd	r24, Y+3	; 0x03
 848:	28 2f       	mov	r18, r24
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	81 e0       	ldi	r24, 0x01	; 1
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	02 c0       	rjmp	.+4      	; 0x856 <GPIO_GetPinDirection+0xec>
 852:	88 0f       	add	r24, r24
 854:	99 1f       	adc	r25, r25
 856:	2a 95       	dec	r18
 858:	e2 f7       	brpl	.-8      	; 0x852 <GPIO_GetPinDirection+0xe8>
 85a:	9a 01       	movw	r18, r20
 85c:	28 23       	and	r18, r24
 85e:	39 23       	and	r19, r25
 860:	8b 81       	ldd	r24, Y+3	; 0x03
 862:	88 2f       	mov	r24, r24
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	a9 01       	movw	r20, r18
 868:	02 c0       	rjmp	.+4      	; 0x86e <__stack+0xf>
 86a:	55 95       	asr	r21
 86c:	47 95       	ror	r20
 86e:	8a 95       	dec	r24
 870:	e2 f7       	brpl	.-8      	; 0x86a <__stack+0xb>
 872:	ca 01       	movw	r24, r20
 874:	89 83       	std	Y+1, r24	; 0x01
 876:	1d c0       	rjmp	.+58     	; 0x8b2 <__stack+0x53>
    break;
    case PORT_D :
      ret=  ReadRegisterPinValue(DIRECTION_REGISTER_PORTD,pin) ;
 878:	e1 e3       	ldi	r30, 0x31	; 49
 87a:	f0 e0       	ldi	r31, 0x00	; 0
 87c:	80 81       	ld	r24, Z
 87e:	48 2f       	mov	r20, r24
 880:	50 e0       	ldi	r21, 0x00	; 0
 882:	8b 81       	ldd	r24, Y+3	; 0x03
 884:	28 2f       	mov	r18, r24
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	81 e0       	ldi	r24, 0x01	; 1
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	02 c0       	rjmp	.+4      	; 0x892 <__stack+0x33>
 88e:	88 0f       	add	r24, r24
 890:	99 1f       	adc	r25, r25
 892:	2a 95       	dec	r18
 894:	e2 f7       	brpl	.-8      	; 0x88e <__stack+0x2f>
 896:	9a 01       	movw	r18, r20
 898:	28 23       	and	r18, r24
 89a:	39 23       	and	r19, r25
 89c:	8b 81       	ldd	r24, Y+3	; 0x03
 89e:	88 2f       	mov	r24, r24
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	a9 01       	movw	r20, r18
 8a4:	02 c0       	rjmp	.+4      	; 0x8aa <__stack+0x4b>
 8a6:	55 95       	asr	r21
 8a8:	47 95       	ror	r20
 8aa:	8a 95       	dec	r24
 8ac:	e2 f7       	brpl	.-8      	; 0x8a6 <__stack+0x47>
 8ae:	ca 01       	movw	r24, r20
 8b0:	89 83       	std	Y+1, r24	; 0x01
    break;
    default :
        /* should not be here */
    break ;
    }
    return ret ;
 8b2:	89 81       	ldd	r24, Y+1	; 0x01
}
 8b4:	0f 90       	pop	r0
 8b6:	0f 90       	pop	r0
 8b8:	0f 90       	pop	r0
 8ba:	0f 90       	pop	r0
 8bc:	0f 90       	pop	r0
 8be:	cf 91       	pop	r28
 8c0:	df 91       	pop	r29
 8c2:	08 95       	ret

000008c4 <LED_Init>:

static void LED_SetDirection(tLED led) ;
static void LED_Toggle(tLED led) ;

void LED_Init(tLED led,tLED_State init_state )
{
 8c4:	df 93       	push	r29
 8c6:	cf 93       	push	r28
 8c8:	00 d0       	rcall	.+0      	; 0x8ca <LED_Init+0x6>
 8ca:	cd b7       	in	r28, 0x3d	; 61
 8cc:	de b7       	in	r29, 0x3e	; 62
 8ce:	89 83       	std	Y+1, r24	; 0x01
 8d0:	6a 83       	std	Y+2, r22	; 0x02
  /* initialize pin as output */
  LED_SetDirection(led) ;
 8d2:	89 81       	ldd	r24, Y+1	; 0x01
 8d4:	0e 94 17 05 	call	0xa2e	; 0xa2e <LED_SetDirection>
  /* initialize pin state */
  LED_SetState(led , init_state) ;
 8d8:	89 81       	ldd	r24, Y+1	; 0x01
 8da:	6a 81       	ldd	r22, Y+2	; 0x02
 8dc:	0e 94 8c 04 	call	0x918	; 0x918 <LED_SetState>
}
 8e0:	0f 90       	pop	r0
 8e2:	0f 90       	pop	r0
 8e4:	cf 91       	pop	r28
 8e6:	df 91       	pop	r29
 8e8:	08 95       	ret

000008ea <LED_Update>:
void LED_Update(void)
{
 8ea:	df 93       	push	r29
 8ec:	cf 93       	push	r28
 8ee:	cd b7       	in	r28, 0x3d	; 61
 8f0:	de b7       	in	r29, 0x3e	; 62
   LED_Toggle(LED_1) ;
 8f2:	80 e0       	ldi	r24, 0x00	; 0
 8f4:	0e 94 5a 05 	call	0xab4	; 0xab4 <LED_Toggle>
   LED_Toggle(LED_2) ;
 8f8:	81 e0       	ldi	r24, 0x01	; 1
 8fa:	0e 94 5a 05 	call	0xab4	; 0xab4 <LED_Toggle>
   LED_Toggle(LED_3) ;
 8fe:	82 e0       	ldi	r24, 0x02	; 2
 900:	0e 94 5a 05 	call	0xab4	; 0xab4 <LED_Toggle>
   LED_Toggle(LED_4) ;
 904:	83 e0       	ldi	r24, 0x03	; 3
 906:	0e 94 5a 05 	call	0xab4	; 0xab4 <LED_Toggle>
   UTILITES_DelayMS(DELAY_TIME) ;
 90a:	80 e2       	ldi	r24, 0x20	; 32
 90c:	93 e0       	ldi	r25, 0x03	; 3
 90e:	0e 94 72 05 	call	0xae4	; 0xae4 <UTILITES_DelayMS>
}
 912:	cf 91       	pop	r28
 914:	df 91       	pop	r29
 916:	08 95       	ret

00000918 <LED_SetState>:
void LED_SetState(tLED led , tLED_State state)
{
 918:	df 93       	push	r29
 91a:	cf 93       	push	r28
 91c:	00 d0       	rcall	.+0      	; 0x91e <LED_SetState+0x6>
 91e:	00 d0       	rcall	.+0      	; 0x920 <LED_SetState+0x8>
 920:	cd b7       	in	r28, 0x3d	; 61
 922:	de b7       	in	r29, 0x3e	; 62
 924:	89 83       	std	Y+1, r24	; 0x01
 926:	6a 83       	std	Y+2, r22	; 0x02
  switch(led)
 928:	89 81       	ldd	r24, Y+1	; 0x01
 92a:	28 2f       	mov	r18, r24
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	3c 83       	std	Y+4, r19	; 0x04
 930:	2b 83       	std	Y+3, r18	; 0x03
 932:	8b 81       	ldd	r24, Y+3	; 0x03
 934:	9c 81       	ldd	r25, Y+4	; 0x04
 936:	81 30       	cpi	r24, 0x01	; 1
 938:	91 05       	cpc	r25, r1
 93a:	d9 f0       	breq	.+54     	; 0x972 <LED_SetState+0x5a>
 93c:	2b 81       	ldd	r18, Y+3	; 0x03
 93e:	3c 81       	ldd	r19, Y+4	; 0x04
 940:	22 30       	cpi	r18, 0x02	; 2
 942:	31 05       	cpc	r19, r1
 944:	2c f4       	brge	.+10     	; 0x950 <LED_SetState+0x38>
 946:	8b 81       	ldd	r24, Y+3	; 0x03
 948:	9c 81       	ldd	r25, Y+4	; 0x04
 94a:	00 97       	sbiw	r24, 0x00	; 0
 94c:	61 f0       	breq	.+24     	; 0x966 <LED_SetState+0x4e>
 94e:	22 c0       	rjmp	.+68     	; 0x994 <LED_SetState+0x7c>
 950:	2b 81       	ldd	r18, Y+3	; 0x03
 952:	3c 81       	ldd	r19, Y+4	; 0x04
 954:	22 30       	cpi	r18, 0x02	; 2
 956:	31 05       	cpc	r19, r1
 958:	91 f0       	breq	.+36     	; 0x97e <LED_SetState+0x66>
 95a:	8b 81       	ldd	r24, Y+3	; 0x03
 95c:	9c 81       	ldd	r25, Y+4	; 0x04
 95e:	83 30       	cpi	r24, 0x03	; 3
 960:	91 05       	cpc	r25, r1
 962:	99 f0       	breq	.+38     	; 0x98a <LED_SetState+0x72>
 964:	17 c0       	rjmp	.+46     	; 0x994 <LED_SetState+0x7c>
  {
  case LED_1 :
    GPIO_SetPinState(PORT_B,PIN_0,state) ;
 966:	81 e0       	ldi	r24, 0x01	; 1
 968:	60 e0       	ldi	r22, 0x00	; 0
 96a:	4a 81       	ldd	r20, Y+2	; 0x02
 96c:	0e 94 0f 01 	call	0x21e	; 0x21e <GPIO_SetPinState>
 970:	11 c0       	rjmp	.+34     	; 0x994 <LED_SetState+0x7c>
    break ;
  case LED_2 :
    GPIO_SetPinState(PORT_B,PIN_1,state) ;
 972:	81 e0       	ldi	r24, 0x01	; 1
 974:	61 e0       	ldi	r22, 0x01	; 1
 976:	4a 81       	ldd	r20, Y+2	; 0x02
 978:	0e 94 0f 01 	call	0x21e	; 0x21e <GPIO_SetPinState>
 97c:	0b c0       	rjmp	.+22     	; 0x994 <LED_SetState+0x7c>
    break ;
  case LED_3 :
    GPIO_SetPinState(PORT_B,PIN_2,state) ;
 97e:	81 e0       	ldi	r24, 0x01	; 1
 980:	62 e0       	ldi	r22, 0x02	; 2
 982:	4a 81       	ldd	r20, Y+2	; 0x02
 984:	0e 94 0f 01 	call	0x21e	; 0x21e <GPIO_SetPinState>
 988:	05 c0       	rjmp	.+10     	; 0x994 <LED_SetState+0x7c>
    break ;
  case LED_4 :
    GPIO_SetPinState(PORT_B,PIN_3,state) ;
 98a:	81 e0       	ldi	r24, 0x01	; 1
 98c:	63 e0       	ldi	r22, 0x03	; 3
 98e:	4a 81       	ldd	r20, Y+2	; 0x02
 990:	0e 94 0f 01 	call	0x21e	; 0x21e <GPIO_SetPinState>
    break ;
  }
}
 994:	0f 90       	pop	r0
 996:	0f 90       	pop	r0
 998:	0f 90       	pop	r0
 99a:	0f 90       	pop	r0
 99c:	cf 91       	pop	r28
 99e:	df 91       	pop	r29
 9a0:	08 95       	ret

000009a2 <LED_GetState>:
tLED_State LED_GetState(tLED led)
{
 9a2:	df 93       	push	r29
 9a4:	cf 93       	push	r28
 9a6:	00 d0       	rcall	.+0      	; 0x9a8 <LED_GetState+0x6>
 9a8:	00 d0       	rcall	.+0      	; 0x9aa <LED_GetState+0x8>
 9aa:	cd b7       	in	r28, 0x3d	; 61
 9ac:	de b7       	in	r29, 0x3e	; 62
 9ae:	8a 83       	std	Y+2, r24	; 0x02
    tLED_State ret = LED_OFF ;
 9b0:	19 82       	std	Y+1, r1	; 0x01
 switch(led)
 9b2:	8a 81       	ldd	r24, Y+2	; 0x02
 9b4:	28 2f       	mov	r18, r24
 9b6:	30 e0       	ldi	r19, 0x00	; 0
 9b8:	3c 83       	std	Y+4, r19	; 0x04
 9ba:	2b 83       	std	Y+3, r18	; 0x03
 9bc:	8b 81       	ldd	r24, Y+3	; 0x03
 9be:	9c 81       	ldd	r25, Y+4	; 0x04
 9c0:	81 30       	cpi	r24, 0x01	; 1
 9c2:	91 05       	cpc	r25, r1
 9c4:	d9 f0       	breq	.+54     	; 0x9fc <LED_GetState+0x5a>
 9c6:	2b 81       	ldd	r18, Y+3	; 0x03
 9c8:	3c 81       	ldd	r19, Y+4	; 0x04
 9ca:	22 30       	cpi	r18, 0x02	; 2
 9cc:	31 05       	cpc	r19, r1
 9ce:	2c f4       	brge	.+10     	; 0x9da <LED_GetState+0x38>
 9d0:	8b 81       	ldd	r24, Y+3	; 0x03
 9d2:	9c 81       	ldd	r25, Y+4	; 0x04
 9d4:	00 97       	sbiw	r24, 0x00	; 0
 9d6:	61 f0       	breq	.+24     	; 0x9f0 <LED_GetState+0x4e>
 9d8:	22 c0       	rjmp	.+68     	; 0xa1e <LED_GetState+0x7c>
 9da:	2b 81       	ldd	r18, Y+3	; 0x03
 9dc:	3c 81       	ldd	r19, Y+4	; 0x04
 9de:	22 30       	cpi	r18, 0x02	; 2
 9e0:	31 05       	cpc	r19, r1
 9e2:	91 f0       	breq	.+36     	; 0xa08 <LED_GetState+0x66>
 9e4:	8b 81       	ldd	r24, Y+3	; 0x03
 9e6:	9c 81       	ldd	r25, Y+4	; 0x04
 9e8:	83 30       	cpi	r24, 0x03	; 3
 9ea:	91 05       	cpc	r25, r1
 9ec:	99 f0       	breq	.+38     	; 0xa14 <LED_GetState+0x72>
 9ee:	17 c0       	rjmp	.+46     	; 0xa1e <LED_GetState+0x7c>
  {
  case LED_1 :
    ret = GPIO_GetPinState(PORT_B,PIN_0) ;
 9f0:	81 e0       	ldi	r24, 0x01	; 1
 9f2:	60 e0       	ldi	r22, 0x00	; 0
 9f4:	0e 94 09 03 	call	0x612	; 0x612 <GPIO_GetPinState>
 9f8:	89 83       	std	Y+1, r24	; 0x01
 9fa:	11 c0       	rjmp	.+34     	; 0xa1e <LED_GetState+0x7c>
    break ;
  case LED_2 :
    ret = GPIO_GetPinState(PORT_B,PIN_1) ;
 9fc:	81 e0       	ldi	r24, 0x01	; 1
 9fe:	61 e0       	ldi	r22, 0x01	; 1
 a00:	0e 94 09 03 	call	0x612	; 0x612 <GPIO_GetPinState>
 a04:	89 83       	std	Y+1, r24	; 0x01
 a06:	0b c0       	rjmp	.+22     	; 0xa1e <LED_GetState+0x7c>
    break ;
  case LED_3 :
    ret = GPIO_GetPinState(PORT_B,PIN_2) ;
 a08:	81 e0       	ldi	r24, 0x01	; 1
 a0a:	62 e0       	ldi	r22, 0x02	; 2
 a0c:	0e 94 09 03 	call	0x612	; 0x612 <GPIO_GetPinState>
 a10:	89 83       	std	Y+1, r24	; 0x01
 a12:	05 c0       	rjmp	.+10     	; 0xa1e <LED_GetState+0x7c>
    break ;
  case LED_4 :
    ret = GPIO_GetPinState(PORT_B,PIN_3) ;
 a14:	81 e0       	ldi	r24, 0x01	; 1
 a16:	63 e0       	ldi	r22, 0x03	; 3
 a18:	0e 94 09 03 	call	0x612	; 0x612 <GPIO_GetPinState>
 a1c:	89 83       	std	Y+1, r24	; 0x01
    break ;
  }
  return ret ;
 a1e:	89 81       	ldd	r24, Y+1	; 0x01
}
 a20:	0f 90       	pop	r0
 a22:	0f 90       	pop	r0
 a24:	0f 90       	pop	r0
 a26:	0f 90       	pop	r0
 a28:	cf 91       	pop	r28
 a2a:	df 91       	pop	r29
 a2c:	08 95       	ret

00000a2e <LED_SetDirection>:

static void LED_SetDirection(tLED led)
{
 a2e:	df 93       	push	r29
 a30:	cf 93       	push	r28
 a32:	00 d0       	rcall	.+0      	; 0xa34 <LED_SetDirection+0x6>
 a34:	0f 92       	push	r0
 a36:	cd b7       	in	r28, 0x3d	; 61
 a38:	de b7       	in	r29, 0x3e	; 62
 a3a:	89 83       	std	Y+1, r24	; 0x01
 switch(led)
 a3c:	89 81       	ldd	r24, Y+1	; 0x01
 a3e:	28 2f       	mov	r18, r24
 a40:	30 e0       	ldi	r19, 0x00	; 0
 a42:	3b 83       	std	Y+3, r19	; 0x03
 a44:	2a 83       	std	Y+2, r18	; 0x02
 a46:	8a 81       	ldd	r24, Y+2	; 0x02
 a48:	9b 81       	ldd	r25, Y+3	; 0x03
 a4a:	81 30       	cpi	r24, 0x01	; 1
 a4c:	91 05       	cpc	r25, r1
 a4e:	d9 f0       	breq	.+54     	; 0xa86 <LED_SetDirection+0x58>
 a50:	2a 81       	ldd	r18, Y+2	; 0x02
 a52:	3b 81       	ldd	r19, Y+3	; 0x03
 a54:	22 30       	cpi	r18, 0x02	; 2
 a56:	31 05       	cpc	r19, r1
 a58:	2c f4       	brge	.+10     	; 0xa64 <LED_SetDirection+0x36>
 a5a:	8a 81       	ldd	r24, Y+2	; 0x02
 a5c:	9b 81       	ldd	r25, Y+3	; 0x03
 a5e:	00 97       	sbiw	r24, 0x00	; 0
 a60:	61 f0       	breq	.+24     	; 0xa7a <LED_SetDirection+0x4c>
 a62:	22 c0       	rjmp	.+68     	; 0xaa8 <LED_SetDirection+0x7a>
 a64:	2a 81       	ldd	r18, Y+2	; 0x02
 a66:	3b 81       	ldd	r19, Y+3	; 0x03
 a68:	22 30       	cpi	r18, 0x02	; 2
 a6a:	31 05       	cpc	r19, r1
 a6c:	91 f0       	breq	.+36     	; 0xa92 <LED_SetDirection+0x64>
 a6e:	8a 81       	ldd	r24, Y+2	; 0x02
 a70:	9b 81       	ldd	r25, Y+3	; 0x03
 a72:	83 30       	cpi	r24, 0x03	; 3
 a74:	91 05       	cpc	r25, r1
 a76:	99 f0       	breq	.+38     	; 0xa9e <LED_SetDirection+0x70>
 a78:	17 c0       	rjmp	.+46     	; 0xaa8 <LED_SetDirection+0x7a>
  {
  case LED_1 :
    GPIO_SetPinDirection(PORT_B,PIN_0,PIN_OUTPUT) ;
 a7a:	81 e0       	ldi	r24, 0x01	; 1
 a7c:	60 e0       	ldi	r22, 0x00	; 0
 a7e:	41 e0       	ldi	r20, 0x01	; 1
 a80:	0e 94 ca 01 	call	0x394	; 0x394 <GPIO_SetPinDirection>
 a84:	11 c0       	rjmp	.+34     	; 0xaa8 <LED_SetDirection+0x7a>
    break ;
  case LED_2 :
    GPIO_SetPinDirection(PORT_B,PIN_1,PIN_OUTPUT) ;
 a86:	81 e0       	ldi	r24, 0x01	; 1
 a88:	61 e0       	ldi	r22, 0x01	; 1
 a8a:	41 e0       	ldi	r20, 0x01	; 1
 a8c:	0e 94 ca 01 	call	0x394	; 0x394 <GPIO_SetPinDirection>
 a90:	0b c0       	rjmp	.+22     	; 0xaa8 <LED_SetDirection+0x7a>
    break ;
  case LED_3 :
    GPIO_SetPinDirection(PORT_B,PIN_2,PIN_OUTPUT) ;
 a92:	81 e0       	ldi	r24, 0x01	; 1
 a94:	62 e0       	ldi	r22, 0x02	; 2
 a96:	41 e0       	ldi	r20, 0x01	; 1
 a98:	0e 94 ca 01 	call	0x394	; 0x394 <GPIO_SetPinDirection>
 a9c:	05 c0       	rjmp	.+10     	; 0xaa8 <LED_SetDirection+0x7a>
    break ;
  case LED_4 :
    GPIO_SetPinDirection(PORT_B,PIN_3,PIN_OUTPUT) ;
 a9e:	81 e0       	ldi	r24, 0x01	; 1
 aa0:	63 e0       	ldi	r22, 0x03	; 3
 aa2:	41 e0       	ldi	r20, 0x01	; 1
 aa4:	0e 94 ca 01 	call	0x394	; 0x394 <GPIO_SetPinDirection>
    break ;
  }
}
 aa8:	0f 90       	pop	r0
 aaa:	0f 90       	pop	r0
 aac:	0f 90       	pop	r0
 aae:	cf 91       	pop	r28
 ab0:	df 91       	pop	r29
 ab2:	08 95       	ret

00000ab4 <LED_Toggle>:
static void LED_Toggle(tLED led)
{
 ab4:	df 93       	push	r29
 ab6:	cf 93       	push	r28
 ab8:	0f 92       	push	r0
 aba:	cd b7       	in	r28, 0x3d	; 61
 abc:	de b7       	in	r29, 0x3e	; 62
 abe:	89 83       	std	Y+1, r24	; 0x01
    if(LED_GetState(led) == LED_OFF)
 ac0:	89 81       	ldd	r24, Y+1	; 0x01
 ac2:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <LED_GetState>
 ac6:	88 23       	and	r24, r24
 ac8:	29 f4       	brne	.+10     	; 0xad4 <LED_Toggle+0x20>
    {
        LED_SetState(led,LED_ON) ;
 aca:	89 81       	ldd	r24, Y+1	; 0x01
 acc:	61 e0       	ldi	r22, 0x01	; 1
 ace:	0e 94 8c 04 	call	0x918	; 0x918 <LED_SetState>
 ad2:	04 c0       	rjmp	.+8      	; 0xadc <LED_Toggle+0x28>
    }else
    {
        LED_SetState(led,LED_OFF) ;
 ad4:	89 81       	ldd	r24, Y+1	; 0x01
 ad6:	60 e0       	ldi	r22, 0x00	; 0
 ad8:	0e 94 8c 04 	call	0x918	; 0x918 <LED_SetState>
    }
}
 adc:	0f 90       	pop	r0
 ade:	cf 91       	pop	r28
 ae0:	df 91       	pop	r29
 ae2:	08 95       	ret

00000ae4 <UTILITES_DelayMS>:
#include "utilites.h"
void UTILITES_DelayMS (U16  delay_time)
{
 ae4:	df 93       	push	r29
 ae6:	cf 93       	push	r28
 ae8:	00 d0       	rcall	.+0      	; 0xaea <UTILITES_DelayMS+0x6>
 aea:	00 d0       	rcall	.+0      	; 0xaec <UTILITES_DelayMS+0x8>
 aec:	00 d0       	rcall	.+0      	; 0xaee <UTILITES_DelayMS+0xa>
 aee:	cd b7       	in	r28, 0x3d	; 61
 af0:	de b7       	in	r29, 0x3e	; 62
 af2:	9e 83       	std	Y+6, r25	; 0x06
 af4:	8d 83       	std	Y+5, r24	; 0x05
    U16 x , y ;
 for( x = 0 ; x<= delay_time ; x++ )
 af6:	1c 82       	std	Y+4, r1	; 0x04
 af8:	1b 82       	std	Y+3, r1	; 0x03
 afa:	12 c0       	rjmp	.+36     	; 0xb20 <UTILITES_DelayMS+0x3c>
 {
     for(y = 0 ;y<=120;y++)
 afc:	1a 82       	std	Y+2, r1	; 0x02
 afe:	19 82       	std	Y+1, r1	; 0x01
 b00:	05 c0       	rjmp	.+10     	; 0xb0c <UTILITES_DelayMS+0x28>
 b02:	89 81       	ldd	r24, Y+1	; 0x01
 b04:	9a 81       	ldd	r25, Y+2	; 0x02
 b06:	01 96       	adiw	r24, 0x01	; 1
 b08:	9a 83       	std	Y+2, r25	; 0x02
 b0a:	89 83       	std	Y+1, r24	; 0x01
 b0c:	89 81       	ldd	r24, Y+1	; 0x01
 b0e:	9a 81       	ldd	r25, Y+2	; 0x02
 b10:	89 37       	cpi	r24, 0x79	; 121
 b12:	91 05       	cpc	r25, r1
 b14:	b0 f3       	brcs	.-20     	; 0xb02 <UTILITES_DelayMS+0x1e>
#include "utilites.h"
void UTILITES_DelayMS (U16  delay_time)
{
    U16 x , y ;
 for( x = 0 ; x<= delay_time ; x++ )
 b16:	8b 81       	ldd	r24, Y+3	; 0x03
 b18:	9c 81       	ldd	r25, Y+4	; 0x04
 b1a:	01 96       	adiw	r24, 0x01	; 1
 b1c:	9c 83       	std	Y+4, r25	; 0x04
 b1e:	8b 83       	std	Y+3, r24	; 0x03
 b20:	2b 81       	ldd	r18, Y+3	; 0x03
 b22:	3c 81       	ldd	r19, Y+4	; 0x04
 b24:	8d 81       	ldd	r24, Y+5	; 0x05
 b26:	9e 81       	ldd	r25, Y+6	; 0x06
 b28:	82 17       	cp	r24, r18
 b2a:	93 07       	cpc	r25, r19
 b2c:	38 f7       	brcc	.-50     	; 0xafc <UTILITES_DelayMS+0x18>
     for(y = 0 ;y<=120;y++)
     {
         ;
     }
 }
}
 b2e:	26 96       	adiw	r28, 0x06	; 6
 b30:	0f b6       	in	r0, 0x3f	; 63
 b32:	f8 94       	cli
 b34:	de bf       	out	0x3e, r29	; 62
 b36:	0f be       	out	0x3f, r0	; 63
 b38:	cd bf       	out	0x3d, r28	; 61
 b3a:	cf 91       	pop	r28
 b3c:	df 91       	pop	r29
 b3e:	08 95       	ret

00000b40 <_exit>:
 b40:	f8 94       	cli

00000b42 <__stop_program>:
 b42:	ff cf       	rjmp	.-2      	; 0xb42 <__stop_program>
